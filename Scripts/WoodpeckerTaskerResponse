with a as(
select
b.name as batch,
s.task as task_id,
s._id as subtask_id,
ta._id as taskattempt,
t.params:metadata.pvid::string as pvid,
t.params:metadata.category::string as category,
t.params:metadata.title::string as title,
t.params:metadata.link::string as link,
t.params:metadata.image::string as image,
t.params:metadata.attributes as attributeProperty,
ta.response:annotations as taResponse
from
SCALE_PROD.PUBLIC.SUBTASKS s
left join SCALE_PROD.PUBLIC.TASKATTEMPTS ta on s.attempts[array_size(s.attempts)-1] = ta._id
left join SCALE_PROD.PUBLIC.TASKS t on s.task = t._id
left join SCALE_PROD.PUBLIC.TASKBATCHES b on t.batch = b._id
where
s.project = '640a1b2121f00794ddf64b06'
and b._id = '64501f01cefb55a91226224a'
and s.review_level = '12'
and s.status in ('pending','completed')
and ta.response:annotations != ''
)

Select
task_id,
subtask_id,
taskattempt,
pvid,
category,
title,
link,
image,
attributeProperty,
-- max(case when key like '%_has_other' then parse_json(value):response else null end) as has_other_response,
taResponse as taskerResponse
From a, 
 lateral flatten(taResponse) 
where 1=1 
-- group by 1,2,3,4,5,6,7,8,10